# -*- coding: utf-8 -*-
"""HR Analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gB_1BWzmtTWVpzCc_03Calfa3MlL78SX
"""



"""Importing the dependencies"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import missingno as msno



"""Reading Data from csv file"""

df = pd.read_csv('/content/HR-Employee-Attrition.csv')
df



"""Exploratory Data Analysis"""

df.head()
# top 5 records

df.tail()
# last 5 records

# Total number of columns in the Dataset
df.columns

# Information about Dataset
df.info()

# More about Dataset
df.describe()

# More about Dataset with Transpose('T)
df.describe().T

# checking for null values in Dataset
df.isnull()

# Dropping duplicates
df = df.drop_duplicates()

# Removing new values
df = df.dropna()

# checking total null values in Dataset
df.isnull().sum()



"""Data Visualization"""

# Plotting the Data Distribution plots
df.hist(figsize=(17,14))
plt.show()

p = msno.bar(df)

# showing a co-relation map for all numeric values
corr_matrix = df.corr()
plt.figure(figsize = (15,10))
sns.heatmap(corr_matrix, annot = True, cmap= 'coolwarm')
plt.title('Corelation Map for Numeric Variables')

# OverTime
sns.countplot(df,x='OverTime')
plt.title('OverTime')
plt.show()

# Marital status
sns.countplot(df,x='MaritalStatus')
plt.title('MaritalStatus')
plt.show()

# Job Role
plt.figure(figsize=(15,10))
sns.countplot(df,y='JobRole')
plt.title('Job Role')
plt.show()

# Gender
sns.countplot(df,x='Gender')
plt.title('Gender')
plt.show()

# Education Field
plt.figure(figsize=(15,10))
sns.countplot(df,y='EducationField')
plt.title('Education Field')
plt.show()

# Department
sns.countplot(df,x='Department')
plt.title('Department')
plt.show()

# Business Travel
sns.countplot(df,x='BusinessTravel')
plt.title('Business Travel')
plt.show()

# Relationship Between Overtime and Age
sns.boxplot(df, x='OverTime', y='Age')
plt.title('Relationship Between Overtime and Age')
plt.show()





"""Plotting Numerical Values"""

# Total Working years
sns.histplot(df,x='TotalWorkingYears',bins=10,kde= True)
plt.title('Relationship Between OverTime And Age')
plt.show()

# Education
sns.histplot(df, x='Education',bins=10,kde=True)
plt.title('Education')
plt.show()

# No of Companies Worked
sns.histplot(df,x='NumCompaniesWorked',bins=10,kde=True)
plt.title('No of Companies Worked')
plt.show()

# Distance from Home
sns.histplot(df,x='DistanceFromHome',bins=10,kde=True)
plt.title('DistanceFromHome')
plt.show()

# Monthly Income
sns.histplot(df,x='MonthlyIncome',bins=10,kde=True)
plt.title('MonthlyIncome')
plt.show()

# Relationship Between Salary And JobRole
plt.figure(figsize=(15,10))
sns.boxplot(df,x='JobRole',y='MonthlyIncome')
plt.title('Relationship Between Salary and JobRole')
plt.xticks(rotation=90)
plt.show()

# Job Satisfaction
sns.histplot(df,x='JobSatisfaction',bins=10,kde=True)
plt.title('Job Satisfaction')
plt.show()

# Performance Rating
sns.histplot(df,x='PerformanceRating',bins=10,kde=True)
plt.title('Performance Rating')
plt.show()

# Employees Tenure in Companies
sns.histplot(df,x='YearsAtCompany',bins=10,kde=True)
plt.title('EmployeesTenureinCompanies')
plt.show()

# Relationship Between Age and Department
plt.figure(figsize=(15,10))
sns.boxplot(df,x='Department',y='Age')
plt.title('Relationship Between Age and Department')
plt.xticks(rotation=90)
plt.show()

# Attrition by Job Role
plt.figure(figsize=(15,10))
sns.countplot(df,x='JobRole',hue='Attrition')
plt.title('Attrition by Job Role')
plt.xticks(rotation=90)
plt.show()